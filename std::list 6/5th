#include <iostream>
#include <list>

bool Palindrome(std::list<int> l)
{
    auto l_begin = l.begin();
    auto l_end = l.end();
    --l_end;
    
    int half_size = l.size() / 2;
    for (int i = 0; i < half_size; ++i)
    {
        if (*l_begin != *l_end)
        {
            return false;
        }
        ++l_begin;
        --l_end;
    }
   
        return true;

}

int main()
{
    std::list<int> my_list;
    for (int i = 1; i <= 5; ++i)
    {

        my_list.push_back(i);
        my_list.push_back(5-i); //1 4 2 3 3 2 4 1
    }
    
   
    std::cout << "My list is: ";

    for (int bit : my_list)
    {
        std::cout << bit << " ";

    }
    std::cout << std::endl;


    bool is_palindrome = Palindrome(my_list);

    if (is_palindrome)
    {
        std::cout << "My list is palindrome.";
        return 0;
    }

    std::cout << "My list is not palindrome.";

    return 0;
}
