#include <iostream>
#include <list>

std::list<int> Reordered(std::list<int> l)
{
    auto l_begin = l.begin();
    auto l_end = l.end();
    --l_end;

    std::list<int> reorderedList;
    int _size = l.size();
    if(_size % 2 == 0)
    { 
        for (int i = 0; i < _size / 2; ++i)
        {
            reorderedList.push_back(*l_begin);
            reorderedList.push_back(*l_end);
            ++l_begin;
            --l_end;
        }

        return reorderedList;

    }

    else
    {
        for (int i = 0; i < _size / 2; ++i)
        {
            reorderedList.push_back(*l_begin);
            reorderedList.push_back(*l_end);
            ++l_begin;
            --l_end;
        }
        reorderedList.push_back(*l_begin);
        return reorderedList;

    }
    
}

int main()
{
    std::list<int> my_list;
    for (int i = 1; i <= 6; ++i)
    {
        my_list.push_back(i);
       
    }
    
    std::cout << "My list is: ";

    for (int bit : my_list)
    {
        std::cout << bit << " ";

    }
    std::cout << std::endl;

    my_list = Reordered(my_list);
    std::cout << "Reordered list:";

    for (int bit : my_list)
    {
        std::cout << bit << " ";

    }
    std::cout << std::endl;


 
    return 0;
}
