/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */


 
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) {
        std::vector<int> elements;
        inorderTraversal(root, elements);
        return elements[k - 1];
    }

private:
    void inorderTraversal(TreeNode* node, std::vector<int>& elements) {
        if (node) {
            inorderTraversal(node->left, elements);
            elements.push_back(node->val);
            inorderTraversal(node->right, elements);
        }
    }
};
