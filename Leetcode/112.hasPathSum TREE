/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool hasPathSum(TreeNode* root, int targetSum) {
        if(root == nullptr){
            return false;
        }

        if(root->left == nullptr && root->right == nullptr) {
            if(root->val == targetSum){
            return true;
            }
            else{
                return false;
            }
        }
        else if(root->left != nullptr && root->right == nullptr){
            root->left->val = root->left->val + root->val;
           
            return hasPathSum(root->left,targetSum);
        }


        else if( root->right != nullptr && root->left == nullptr){
             root->right->val = root->right->val + root->val;
        
            return hasPathSum(root->right,targetSum);
        }

        else{
            
            root->left->val = root->left->val + root->val;
        
            root->right->val = root->right->val + root->val;

            
            return hasPathSum(root->left,targetSum) || hasPathSum(root->right,targetSum);
        }

return 0;
    }
};
